"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

import petstore
from petstore import Petstore


def test_pet_sdk_update_pet():
    s = Petstore(
        api_key="<YOUR_API_KEY_HERE>",
    )

    assert s is not None

    res = s.pet.update_pet(
        request={
            "id": 10,
            "name": "doggie",
            "category": {
                "id": 1,
                "name": "Dogs",
            },
            "photo_urls": [
                "<value>",
                "<value>",
            ],
        }
    )
    assert res is not None
    assert res is not None
    assert res == petstore.Pet(
        id=10,
        name="doggie",
        category=petstore.Category(
            id=1,
            name="Dogs",
        ),
        photo_urls=[
            "<value>",
        ],
    )


def test_pet_sdk_add_pet():
    s = Petstore(
        api_key="<YOUR_API_KEY_HERE>",
    )

    assert s is not None

    res = s.pet.add_pet(
        request={
            "id": 10,
            "name": "doggie",
            "category": {
                "id": 1,
                "name": "Dogs",
            },
            "photo_urls": [
                "<value>",
            ],
        }
    )
    assert res is not None
    assert res is not None
    assert res == petstore.Pet(
        id=10,
        name="doggie",
        category=petstore.Category(
            id=1,
            name="Dogs",
        ),
        photo_urls=[
            "<value>",
        ],
    )


def test_pet_sdk_find_pets_by_status():
    s = Petstore(
        api_key="<YOUR_API_KEY_HERE>",
    )

    assert s is not None

    res = s.pet.find_pets_by_status()
    assert res is not None
    assert res is not None
    assert res == [
        petstore.Pet(
            id=10,
            name="doggie",
            category=petstore.Category(
                id=1,
                name="Dogs",
            ),
            photo_urls=[
                "<value>",
            ],
        ),
        petstore.Pet(
            id=10,
            name="doggie",
            category=petstore.Category(
                id=1,
                name="Dogs",
            ),
            photo_urls=[
                "<value>",
            ],
        ),
        petstore.Pet(
            id=10,
            name="doggie",
            category=petstore.Category(
                id=1,
                name="Dogs",
            ),
            photo_urls=[
                "<value>",
            ],
        ),
    ]


def test_pet_sdk_find_pets_by_tags():
    s = Petstore(
        api_key="<YOUR_API_KEY_HERE>",
    )

    assert s is not None

    res = s.pet.find_pets_by_tags()
    assert res is not None
    assert res is not None
    assert res == [
        petstore.Pet(
            id=10,
            name="doggie",
            category=petstore.Category(
                id=1,
                name="Dogs",
            ),
            photo_urls=[
                "<value>",
                "<value>",
                "<value>",
            ],
        ),
    ]


def test_pet_sdk_get_pet_by_id():
    s = Petstore(
        api_key="<YOUR_API_KEY_HERE>",
    )

    assert s is not None

    res = s.pet.get_pet_by_id(pet_id=504151)
    assert res is not None
    assert res is not None
    assert res == petstore.Pet(
        id=10,
        name="doggie",
        category=petstore.Category(
            id=1,
            name="Dogs",
        ),
        photo_urls=[
            "<value>",
        ],
    )


def test_pet_sdk_delete_pet():
    s = Petstore(
        api_key="<YOUR_API_KEY_HERE>",
    )

    assert s is not None

    res = s.pet.delete_pet(pet_id=441876)
    assert res is not None
    assert res is not None
    assert res == petstore.Pet(
        id=10,
        name="doggie",
        category=petstore.Category(
            id=1,
            name="Dogs",
        ),
        photo_urls=[
            "<value>",
        ],
    )
