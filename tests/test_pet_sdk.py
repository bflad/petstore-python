"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

import os
import petstore
from petstore import Petstore
from tests.test_client import create_test_http_client


def test_pet_sdk_update_pet():
    with Petstore(
        server_url=os.getenv("TEST_SERVER_URL", "http://localhost:18080"),
        client=create_test_http_client("updatePet"),
        api_key="<YOUR_API_KEY_HERE>",
    ) as s:
        assert s is not None

        res = s.pet.update_pet(
            request={
                "id": 10,
                "name": "doggie",
                "category": {
                    "id": 1,
                    "name": "Dogs",
                },
                "photo_urls": [
                    "<value>",
                    "<value>",
                ],
            }
        )
        assert res is not None
        assert res == petstore.Pet(
            id=10,
            name="doggie",
            category=petstore.Category(
                id=1,
                name="Dogs",
            ),
            photo_urls=[
                "<value>",
            ],
        )


def test_pet_sdk_add_pet():
    with Petstore(
        server_url=os.getenv("TEST_SERVER_URL", "http://localhost:18080"),
        client=create_test_http_client("addPet"),
        api_key="<YOUR_API_KEY_HERE>",
    ) as s:
        assert s is not None

        res = s.pet.add_pet(
            request={
                "id": 10,
                "name": "doggie",
                "category": {
                    "id": 1,
                    "name": "Dogs",
                },
                "photo_urls": [
                    "<value>",
                ],
            }
        )
        assert res is not None
        assert res == petstore.Pet(
            id=10,
            name="doggie",
            category=petstore.Category(
                id=1,
                name="Dogs",
            ),
            photo_urls=[
                "<value>",
            ],
        )


def test_pet_sdk_find_pets_by_status():
    with Petstore(
        server_url=os.getenv("TEST_SERVER_URL", "http://localhost:18080"),
        client=create_test_http_client("findPetsByStatus"),
        api_key="<YOUR_API_KEY_HERE>",
    ) as s:
        assert s is not None

        res = s.pet.find_pets_by_status()
        assert res is not None
        assert res == [
            petstore.Pet(
                id=10,
                name="doggie",
                category=petstore.Category(
                    id=1,
                    name="Dogs",
                ),
                photo_urls=[
                    "<value>",
                ],
            ),
            petstore.Pet(
                id=10,
                name="doggie",
                category=petstore.Category(
                    id=1,
                    name="Dogs",
                ),
                photo_urls=[
                    "<value>",
                ],
            ),
            petstore.Pet(
                id=10,
                name="doggie",
                category=petstore.Category(
                    id=1,
                    name="Dogs",
                ),
                photo_urls=[
                    "<value>",
                ],
            ),
        ]


def test_pet_sdk_find_pets_by_tags():
    with Petstore(
        server_url=os.getenv("TEST_SERVER_URL", "http://localhost:18080"),
        client=create_test_http_client("findPetsByTags"),
        api_key="<YOUR_API_KEY_HERE>",
    ) as s:
        assert s is not None

        res = s.pet.find_pets_by_tags()
        assert res is not None
        assert res == [
            petstore.Pet(
                id=10,
                name="doggie",
                category=petstore.Category(
                    id=1,
                    name="Dogs",
                ),
                photo_urls=[
                    "<value>",
                    "<value>",
                    "<value>",
                ],
            ),
        ]


def test_pet_sdk_get_pet_by_id():
    with Petstore(
        server_url=os.getenv("TEST_SERVER_URL", "http://localhost:18080"),
        client=create_test_http_client("getPetById"),
        api_key="<YOUR_API_KEY_HERE>",
    ) as s:
        assert s is not None

        res = s.pet.get_pet_by_id(pet_id=504151)
        assert res is not None
        assert res == petstore.Pet(
            id=10,
            name="doggie",
            category=petstore.Category(
                id=1,
                name="Dogs",
            ),
            photo_urls=[
                "<value>",
            ],
        )


def test_pet_sdk_delete_pet():
    with Petstore(
        server_url=os.getenv("TEST_SERVER_URL", "http://localhost:18080"),
        client=create_test_http_client("deletePet"),
        api_key="<YOUR_API_KEY_HERE>",
    ) as s:
        assert s is not None

        res = s.pet.delete_pet(pet_id=441876)
        assert res is not None
        assert res == petstore.Pet(
            id=10,
            name="doggie",
            category=petstore.Category(
                id=1,
                name="Dogs",
            ),
            photo_urls=[
                "<value>",
            ],
        )
